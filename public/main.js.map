{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/movie-list/movie-list-routing.module.ts","./src/app/shared/shared.module.ts","./src/app/shared/components/loading-indicator/loading-indicator.component.ts","./src/app/shared/components/loading-indicator/loading-indicator.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/movie-list/movie-list.component.ts","./src/app/components/movie-list/movie-list.component.html","./src/app/components/movie-list/facades/movie-list.facade.ts","./src/app/components/movie-list/movie-list.module.ts","./src/app/components/movie-list/store/states/movie-list.state.ts","./src/app/components/movie-list/store/actions/movie-list.actions.ts","./src/app/shared/components/page-header/page-header.component.ts","./src/app/shared/components/page-header/page-header.component.html","./src/app/app-routing.module.ts","./src/app/components/movie-list/services/apis/movie-list.api.service.ts","./src/app/core/interceptors/http-client.interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,+BAA+B;CACzC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;AChBnE;AAAA;AAAA;AAAA;AAAyC;AACc;;AAKhD,MAAM,sBAAsB;;qGAAtB,sBAAsB;sKAAtB,sBAAsB,kBAFrB,4DAAY;mIAEb,sBAAsB,cAFrB,4DAAY;6FAEb,sBAAsB;cAHlC,sDAAQ;eAAC;gBACN,OAAO,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACLD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACN;AACY;AACgB;AACkC;AAClB;;AAY9E,MAAM,YAAY;;2FAAZ,YAAY;kJAAZ,YAAY,kBANZ;YACL,4DAAY;YACZ,kFAAiB;YACjB,kEAAmB;SACtB;mIAEQ,YAAY,mBARN,mHAAyB,EAAE,iGAAmB,aAGzD,4DAAY;QACZ,kFAAiB;QACjB,kEAAmB,aAJb,mHAAyB,EAAE,iGAAmB;6FAO/C,YAAY;cATxB,sDAAQ;eAAC;gBACN,YAAY,EAAE,CAAC,mHAAyB,EAAE,iGAAmB,CAAC;gBAC9D,OAAO,EAAE,CAAC,mHAAyB,EAAE,iGAAmB,CAAC;gBACzD,OAAO,EAAE;oBACL,4DAAY;oBACZ,kFAAiB;oBACjB,kEAAmB;iBACtB;aACJ;;;;;;;;;;;;;;AChBD;AAAA;AAAA;AAAkD;;AAO3C,MAAM,yBAAyB;IAEpC,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;kGALU,yBAAyB;yGAAzB,yBAAyB;QCPtC,yEACI;QAAA,0EAAsB;QAAA,qEAAU;QAAA,4DAAO;QAC3C,4DAAM;;6FDKO,yBAAyB;cALrC,uDAAS;eAAC;gBACT,QAAQ,EAAE,uBAAuB;gBACjC,WAAW,EAAE,oCAAoC;gBACjD,SAAS,EAAE,CAAC,oCAAoC,CAAC;aAClD;;;;;;;;;;;;;;AEND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AACe;AACC;AAC3B;AACY;;;;AAOpC,MAAM,YAAY;IAIvB,YAAY,QAAiB;QAH7B,UAAK,GAAG,eAAe,CAAC;QAChB,aAAQ,GAAG,IAAI,4CAAO,EAAQ,CAAC;QAGrC,QAAQ,CAAC,IAAI,CACX,sEAAkB,CAAC,sEAAkB,CAAC,EACtC,gEAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CACzB,CAAC,SAAS,CAAC,CAAC,MAA0B,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,WAAW;QACT,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QACrB,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;IAC3B,CAAC;;wEAdU,YAAY;4FAAZ,YAAY;QCXzB,2EAA+B;;6FDWlB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AAEe;AACT;AAC4B;AACS;AAC3C;AAC6B;AACT;AACe;AACG;AACxB;AACc;AACR;;;;;;AAyBtD,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBALT;QACT,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,gGAAqB,EAAE,KAAK,EAAE,IAAI,EAAE;KAC7E,YAfQ;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;YAChB,sDAAU,CAAC,OAAO,CAAC,EAAE,CAAC;YACtB,2EAAsB,CAAC,OAAO,EAAE;YAChC,mFAA6B,CAAC,OAAO,EAAE;YACvC,0EAAsB,CAAC,OAAO,EAAE;YAChC,wFAAe;YACf,6FAAuB;YACvB,qEAAS;YACT,mFAAiB;SAClB;mIAMU,SAAS,mBApBlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;QAChB,qEAAgB,gSAKhB,wFAAe;QACf,6FAAuB;QACvB,qEAAS;QACT,mFAAiB;6FAOR,SAAS;cAtBrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,2DAAY;iBACb;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,oEAAgB;oBAChB,qEAAgB;oBAChB,sDAAU,CAAC,OAAO,CAAC,EAAE,CAAC;oBACtB,2EAAsB,CAAC,OAAO,EAAE;oBAChC,mFAA6B,CAAC,OAAO,EAAE;oBACvC,0EAAsB,CAAC,OAAO,EAAE;oBAChC,wFAAe;oBACf,6FAAuB;oBACvB,qEAAS;oBACT,mFAAiB;iBAClB;gBACD,SAAS,EAAE;oBACT,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,gGAAqB,EAAE,KAAK,EAAE,IAAI,EAAE;iBAC7E;gBACD,SAAS,EAAE,CAAC,2DAAY,CAAC;aAC1B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtC4D;AACjB;AAIuC;AAClB;AAE7B;;;;;;;;;ICGpB,yEACI;IAAA,uEACI;IAAA,oEACA;IAAA,0EACI;IAAA,yEAAiC;IAAA,uDAAe;IAAA,4DAAK;IACzD,4DAAM;IACV,4DAAI;IACR,4DAAM;;;IANC,0DAA2C;IAA3C,4JAA2C;IAChB,0DAAwB;IAAxB,0JAAwB;IAAC,0FAAqB;IAEnC,0DAAe;IAAf,+EAAe;;;IAVpE,sEACI;IAAA,yEACI;IAAA,uDACJ;IAAA,4DAAM;IAEN,yEACI;IAAA,0HAOM;IACV,4DAAM;IAEV,4DAAM;;;IAdE,0DACJ;IADI,yFACJ;IAG2B,0DAAc;IAAd,mFAAc;;;IARjD,sEAEI;IAAA,oHAgBM;IAEV,4DAAM;;;IAlBoB,0DAAmB;IAAnB,4FAAmB;;;IAoB7C,0EACI;IAAA,mFAAgD;IACpD,4DAAM;;ADVH,MAAM,kBAAkB;IAiB7B,YAAmB,KAAY,EAAU,KAAqB;QAA3C,UAAK,GAAL,KAAK,CAAO;QAAU,UAAK,GAAL,KAAK,CAAgB;QAL9D,qBAAgB,GAA0B,EAAE,CAAC;QAE7C,iBAAY,GAAiB,IAAI,iDAAY,EAAE,CAAC;QAChD,SAAI,GAAW,EAAE,CAAC;QAGhB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC;IAC9C,CAAC;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,QAAQ;;QAEN,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;QAE3B,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,8EAAY,CAAC,CAAC;SACvC;aAAM;YACL,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,iFAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;SACrD;QAED,MAAM,0BAA0B,SAAG,IAAI,CAAC,iBAAiB,0CAAE,SAAS,CAAC,CAAC,GAAqB,EAAE,EAAE;YAC7F,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;QAC9B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IACpD,CAAC;;oFAvCU,kBAAkB;kGAAlB,kBAAkB;QCjB/B,yEACI;QAAA,6EAAmC;QAEnC,8GAoBM;;QAEN,8GAEM;;QAEV,4DAAM;;QA1BI,0DAA+C;QAA/C,0KAA+C;QAsB/C,0DAA0B;QAA1B,iJAA0B;;ADJlC;IADC,0DAAM,CAAC,6EAAc,CAAC,mBAAmB,CAAC;6DACsB;AAGjE;IADC,0DAAM,CAAC,6EAAc,CAAC,SAAS,CAAC;sDACW;AAG5C;IADC,0DAAM,CAAC,6EAAc,CAAC,QAAQ,CAAC;kDACI;6FAVzB,kBAAkB;cAL9B,uDAAS;eAAC;gBACT,QAAQ,EAAE,gBAAgB;gBAC1B,WAAW,EAAE,6BAA6B;gBAC1C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;2KAKC,iBAAiB,MAGjB,UAAU,MAGV,MAAM;;;;;;;;;;;;;AE3BR;AAAA;AAAA;AAA2C;;AAMpC,MAAM,eAAe;IAExB,gBAAgB,CAAC;IAAA,CAAC;IAElB,iDAAiD;IAC1C,SAAS,CAAC,IAAuB;QAEpC,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;YACzB,MAAM,aAAa,GAAG,IAAI,GAAG,EAA6B,CAAC;YAC3D,MAAM,SAAS,GAA0B,EAAE,CAAC;YAE5C,IAAI,CAAC,OAAO,CAAC,CAAC,GAAe,EAAE,EAAE;gBAC7B,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,GAAW,EAAE,EAAE;oBAC/B,IAAI,cAAc,GAAiB,aAAa,CAAC,GAAG,CAAC,GAAG,CAAiB,CAAC;oBAC1E,IAAI,cAAc,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;wBAC7C,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;qBAC5B;yBAAM;wBACH,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;qBAC1B;oBACD,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,cAAc,CAAC,CAAC;gBAC3C,CAAC,CAAC,CAAC;YACP,CAAC,CAAC,CAAC;YAEH,KAAK,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,aAAa,EAAE;gBACpC,SAAS,CAAC,IAAI,CAAC;oBACX,KAAK,EAAE,GAAG;oBACV,MAAM,EAAE,KAAK;iBAChB,CAAC,CAAC;aACN;YACD,OAAO,SAAS,CAAC;SACpB;QACD,OAAO,EAAE,CAAC;IACd,CAAC;;8EAhCQ,eAAe;kGAAf,eAAe,WAAf,eAAe;6FAAf,eAAe;cAD3B,wDAAU;;;;;;;;;;;;;;ACLX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACA;AACmB;AACE;AACF;AAEiB;AACZ;AAClB;AACsB;;;AAc9D,MAAM,eAAe;;8FAAf,eAAe;wJAAf,eAAe,mBAFb,CAAC,yFAAmB,EAAE,0EAAe,CAAC,YANxC;YACL,4DAAY;YACZ,yEAAY;YACZ,iFAAsB;YACtB,sDAAU,CAAC,UAAU,CAAC,CAAC,6EAAc,CAAC,CAAC;SAC1C;mIAGQ,eAAe,mBAVpB,wEAAkB,aAGlB,4DAAY;QACZ,yEAAY;QACZ,iFAAsB;6FAKjB,eAAe;cAZ3B,sDAAQ;eAAC;gBACN,YAAY,EAAE;oBACV,wEAAkB;iBACrB;gBACD,OAAO,EAAE;oBACL,4DAAY;oBACZ,yEAAY;oBACZ,iFAAsB;oBACtB,sDAAU,CAAC,UAAU,CAAC,CAAC,6EAAc,CAAC,CAAC;iBAC1C;gBACD,SAAS,EAAE,CAAC,yFAAmB,EAAE,0EAAe,CAAC;aACpD;;;;;;;;;;;;;;;;;;;;;;;;;ACrB0C;AACyB;AAClC;AACe;AAQ6B;;;;IAsBjE,cAAc,SAAd,cAAc;IAEvB,YAAoB,gBAAqC,EAAU,eAAgC;QAA/E,qBAAgB,GAAhB,gBAAgB,CAAqB;QAAU,oBAAe,GAAf,eAAe,CAAiB;IACnG,CAAC;IAGD,MAAM,CAAC,YAAY,CAAC,KAA0B;QAC1C,OAAO,KAAK,CAAC,SAAS,CAAC;IAC3B,CAAC;IAGD,MAAM,CAAC,mBAAmB,CAAC,KAA0B;QACjD,OAAO,KAAK,CAAC,gBAAgB,CAAC;IAClC,CAAC;IAGD,MAAM,CAAC,QAAQ,CAAC,KAA0B;QACtC,OAAO,KAAK,CAAC,KAAK,CAAC;IACvB,CAAC;IAGD,MAAM,CAAC,SAAS,CAAC,KAA0B;QACvC,OAAO,KAAK,CAAC,SAAS,CAAC;IAC3B,CAAC;IAGD,YAAY,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAqC;QAClE,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;QACzB,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC,IAAI,CACnC,0DAAG,CAAC,CAAC,QAAgC,EAAE,EAAE;YACrC,QAAQ,iCACD,KAAK,KACR,SAAS,EAAE,QAAQ,CAAC,MAAM,EAC1B,gBAAgB,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EACjE,SAAS,EAAE,KAAK,IAClB,CAAC;QACP,CAAC,CAAC,EACF,iEAAU,CAAC,CAAC,GAAsB,EAAE,EAAE;YAClC,QAAQ,iCACD,KAAK,KACR,KAAK,EAAE,GAAG,CAAC,OAAO,EAClB,SAAS,EAAE,KAAK,IAClB,CAAC;YACH,OAAO,uDAAU,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CACL,CAAC;IACN,CAAC;IAGD,eAAe,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAqC,EAAE,EAAE,OAAO,EAAO;QACvF,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;QACzB,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC7C,0DAAG,CAAC,CAAC,QAAgC,EAAE,EAAE;YACrC,QAAQ,iCACD,KAAK,KACR,SAAS,EAAE,QAAQ,CAAC,MAAM,EAC1B,gBAAgB,EAAE,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EACjE,SAAS,EAAE,KAAK,IAClB,CAAC;QACP,CAAC,CAAC,EACF,iEAAU,CAAC,CAAC,GAAsB,EAAE,EAAE;YAClC,QAAQ,iCACD,KAAK,KACR,KAAK,EAAE,GAAG,CAAC,OAAO,EAClB,SAAS,EAAE,KAAK,IAClB,CAAC;YACH,OAAO,uDAAU,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;QAC9C,CAAC,CAAC,CACL,CAAC;IACN,CAAC;CAGJ;4EAxEY,cAAc;iGAAd,cAAc,WAAd,cAAc;AA0BvB;IADC,0DAAM,CAAC,wEAAY,CAAC;kDAqBpB;AAGD;IADC,0DAAM,CAAC,2EAAe,CAAC;qDAqBvB;AA/DD;IADC,4DAAQ,EAAE;wCAGV;AAGD;IADC,4DAAQ,EAAE;+CAGV;AAGD;IADC,4DAAQ,EAAE;oCAGV;AAGD;IADC,4DAAQ,EAAE;qCAGV;AAvBQ,cAAc;IAZ1B,yDAAK,CAAsB;QACxB,IAAI,EAAE,QAAQ;QACd,QAAQ,EAAE;YACN,SAAS,EAAE,EAAE;YACb,gBAAgB,EAAE,EAAE;YACpB,KAAK,EAAE,IAAI;YACX,SAAS,EAAE,IAAI;SAClB;KACJ,CAAC;IAEF,mBAAmB;GAEN,cAAc,CAwE1B;AAxE0B;6FAAd,cAAc;cAD1B,wDAAU;+NA2BP,YAAY,MAuBZ,eAAe;;;;;;;;;;;;;ACnFnB;AAAA;AAAA;AAAO,MAAM,YAAY;;AACL,iBAAI,GAAG,iBAAiB,CAAC;AAGtC,MAAM,eAAe;IAExB,YAAmB,OAAe;QAAf,YAAO,GAAP,OAAO,CAAQ;IAAI,CAAC;;AADvB,oBAAI,GAAG,oBAAoB,CAAC;;;;;;;;;;;;;ACLhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAC0B;AAE6B;AACpC;AACd;;;;;AAQxC,MAAM,mBAAmB;IAK5B,YAAoB,EAAe,EAAS,KAAY;QAApC,OAAE,GAAF,EAAE,CAAa;QAAS,UAAK,GAAL,KAAK,CAAO;QAHxD,aAAQ,GAAG,0EAAQ,CAAC;QAIhB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACjC,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC5C,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACP,MAAM,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,KAAK;QACzE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,8GAAe,CAAC,WAAW,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,4DAAQ,CAAC,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC,CAAC,CAAC;IAC9D,CAAC;;sFAfQ,mBAAmB;mGAAnB,mBAAmB;QCbhC,sEACI;QAAA,yEACI;QAAA,yEACI;QAAA,qEAAI;QAAA,iEAAM;QAAA,4DAAK;QACf,qEAAI;QAAA,iEAAM;QAAA,4DAAK;QACnB,4DAAM;QACN,yEACI;QAAA,0EACI;QAAA,0EACI;QAAA,6EAEI;QAFI,4IAAS,iBAAa,IAAC;QAE3B,yEAAqC;QACzC,4DAAS;QACT,4EAEJ;QADQ,uJAAe,iBAAa,IAAC;QADjC,4DAEJ;QAAA,4DAAO;QACX,4DAAO;QACX,4DAAM;QACV,4DAAM;QACN,iEACJ;QAAA,4DAAM;;QAbY,0DAA6B;QAA7B,0FAA6B;QAId,0DAAiB;QAAjB,8EAAiB;;6FDErC,mBAAmB;cAL/B,uDAAS;eAAC;gBACP,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;aAC9C;;;;;;;;;;;;;;AEZD;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAC2B;;;AAElF,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE;IACnD;QACE,SAAS,EAAE,8FAAkB;QAC7B,IAAI,EAAE,MAAM;KACb;IACD;QACE,SAAS,EAAE,8FAAkB;QAC7B,IAAI,EAAE,YAAY;KACnB;IACD;QACE,IAAI,EAAE,oBAAoB;QAC1B,YAAY,EAAE,GAAG,EAAE,CAAC,oOAAuD,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,iBAAiB,CAAC;KAC/G;CACF,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,EAChD,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;6FAEX,gBAAgB;cAJ5B,sDAAQ;eAAC;gBACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;gBAC1D,OAAO,EAAE,CAAC,4DAAY,CAAC;aACxB;;;;;;;;;;;;;;ACtBD;AAAA;AAAA;AAAA;AAAA;AAA2C;AAGgB;;;AAIpD,MAAM,mBAAmB;IAC5B,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,GAAG;QACC,MAAM,QAAQ,GAAG,wEAAW,CAAC,OAAO,GAAG,QAAQ,CAAC;QAChD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAyB,QAAQ,CAAC,CAAC;IACjE,CAAC;IAED,MAAM,CAAC,WAAmB;QACtB,MAAM,QAAQ,GAAG,wEAAW,CAAC,OAAO,GAAG,YAAY,WAAW,EAAE,CAAC;QACjE,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAyB,QAAQ,CAAC,CAAC;IACjE,CAAC;;sFAXQ,mBAAmB;sGAAnB,mBAAmB,WAAnB,mBAAmB;6FAAnB,mBAAmB;cAD/B,wDAAU;;;;;;;;;;;;;;ACPX;AAAA;AAAA;AAA2C;;AAM3C,oFAAoF;AACpF,+DAA+D;AAExD,MAAM,qBAAqB;IAC9B,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAClD,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE;YACtC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC,EAAE,CAAC,CAAC;SACjG;QAED,MAAM,SAAS,GAAG,OAAO,CAAC,KAAK,CAAC;YAC5B,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,mBAAmB,CAAC;SACrE,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IAElC,CAAC;;0FAZQ,qBAAqB;wGAArB,qBAAqB,WAArB,qBAAqB;6FAArB,qBAAqB;cADjC,wDAAU;;;;;;;;;;;;;;ACRX;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAGzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACZpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'https://wookie.codesubmit.io/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\n\r\n@NgModule({\r\n    exports: [RouterModule]\r\n})\r\nexport class MovieListRoutingModule { }","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { FontAwesomeModule } from \"@fortawesome/angular-fontawesome\";\r\nimport { LoadingIndicatorComponent } from \"./components/loading-indicator/loading-indicator.component\";\r\nimport { PageHeaderComponent } from \"./components/page-header/page-header.component\";\r\n\r\n\r\n@NgModule({\r\n    declarations: [LoadingIndicatorComponent, PageHeaderComponent],\r\n    exports: [LoadingIndicatorComponent, PageHeaderComponent],\r\n    imports: [\r\n        CommonModule,\r\n        FontAwesomeModule,\r\n        ReactiveFormsModule\r\n    ]\r\n})\r\nexport class SharedModule { }","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading-indicator',\r\n  templateUrl: './loading-indicator.component.html',\r\n  styleUrls: ['./loading-indicator.component.scss']\r\n})\r\nexport class LoadingIndicatorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}","<div class=\"spinner-border fx-spinner-text\" role=\"status\">\r\n    <span class=\"sr-only\">Loading...</span>\r\n</div>","import { Component } from '@angular/core';\nimport { RouterDataResolved } from '@ngxs/router-plugin';\nimport { Actions, ofActionSuccessful } from '@ngxs/store';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'wookie-movies';\n  private destroy$ = new Subject<void>();\n\n  constructor(actions$: Actions) {\n    actions$.pipe(\n      ofActionSuccessful(RouterDataResolved),\n      takeUntil(this.destroy$)\n    ).subscribe((action: RouterDataResolved) => { });\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HttpClientInterceptor } from './core/interceptors/http-client.interceptor';\nimport { NgxsModule } from '@ngxs/store';\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { MovieListModule } from './components/movie-list/movie-list.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    NgxsModule.forRoot([]),\n    NgxsRouterPluginModule.forRoot(),\n    NgxsReduxDevtoolsPluginModule.forRoot(),\n    NgxsLoggerPluginModule.forRoot(),\n    MovieListModule,\n    BrowserAnimationsModule,\n    NgbModule,\n    FontAwesomeModule\n  ],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: HttpClientInterceptor, multi: true }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { Select, Store } from '@ngxs/store';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { MovieListFacade } from './facades/movie-list.facade';\nimport { MovieListModel } from './models/movie-list.model';\nimport { GetMovieList, SearchMovieList } from './store/actions/movie-list.actions';\nimport { MovieListState } from './store/states/movie-list.state';\n\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\n\n\n@Component({\n  selector: 'app-movie-list',\n  templateUrl: './movie-list.component.html',\n  styleUrls: ['./movie-list.component.scss']\n})\nexport class MovieListComponent implements OnInit, OnDestroy {\n\n\n  @Select(MovieListState.getGroupedMovieList)\n  groupedMovieList$: Observable<Array<MovieListModel>> | undefined;\n\n  @Select(MovieListState.isLoading)\n  isLoading$: Observable<boolean> | undefined;\n\n  @Select(MovieListState.getError)\n  error$: Observable<any> | undefined;\n\n  groupedMovieList: Array<MovieListModel> = [];\n\n  subscription: Subscription = new Subscription();\n  slug: string = '';\n\n  constructor(public store: Store, private route: ActivatedRoute,) {\n    this.slug = this.route.snapshot.params.slug;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n\n    this.groupedMovieList = [];\n\n    if (!this.slug) {\n      this.store.dispatch(new GetMovieList);\n    } else {\n      this.store.dispatch(new SearchMovieList(this.slug));\n    }\n\n    const groupMovieListSubscription = this.groupedMovieList$?.subscribe((res: MovieListModel[]) => {\n      this.groupedMovieList = res;\n    });\n    this.subscription.add(groupMovieListSubscription);\n  }\n\n\n\n}\n","<div class=\"container-fluid\">\n    <app-page-header></app-page-header>\n\n    <div *ngIf=\"!(isLoading$ | async) && groupedMovieList\">\n\n        <div *ngFor=\"let item of groupedMovieList\">\n            <div class=\"genre\">\n                {{item.genre}}\n            </div>\n\n            <div class=\"row\">\n                <div *ngFor=\"let movie of item.movies\" class=\"col-12 col-sm-6 col-md-4 col-lg-3\">\n                    <a [routerLink]=\"['/movie-detail',movie.slug]\" class=\"card box\">\n                        <img class=\"card-img-top\" src=\"{{movie.backdrop}}\" alt=\"{{movie.title}}\">\n                        <div class=\"card-body\">\n                            <h5 class=\"card-title title-ext\">{{movie.title}}</h5>\n                        </div>\n                    </a>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n\n    <div *ngIf=\"(isLoading$ | async)\" class=\"spinner-container\">\n        <app-loading-indicator> </app-loading-indicator>\n    </div>\n\n</div>","import { Injectable } from \"@angular/core\";\r\nimport { MovieModel } from \"src/app/shared/models/movie.model\";\r\nimport { MovieListModel } from \"../models/movie-list.model\";\r\n\r\n\r\n@Injectable()\r\nexport class MovieListFacade {\r\n\r\n    constructor() { };\r\n\r\n    // function to group array of movie list by genre\r\n    public transform(data: Array<MovieModel>): Array<MovieListModel> {\r\n\r\n        if (data && data.length > 0) {\r\n            const movieGenreMap = new Map<string, Array<MovieModel>>();\r\n            const movieList: Array<MovieListModel> = [];\r\n\r\n            data.forEach((res: MovieModel) => {\r\n                res.genres.forEach((gen: string) => {\r\n                    let movieListValue: MovieModel[] = movieGenreMap.get(gen) as MovieModel[];\r\n                    if (movieListValue && movieListValue.length > 0) {\r\n                        movieListValue.push(res);\r\n                    } else {\r\n                        movieListValue = [res];\r\n                    }\r\n                    movieGenreMap.set(gen, movieListValue);\r\n                });\r\n            });\r\n\r\n            for (let [key, value] of movieGenreMap) {\r\n                movieList.push({\r\n                    genre: key,\r\n                    movies: value\r\n                });\r\n            }\r\n            return movieList;\r\n        }\r\n        return [];\r\n    }\r\n}","import { NgModule } from \"@angular/core\";\r\nimport { NgxsModule } from \"@ngxs/store\";\r\nimport { SharedModule } from \"src/app/shared/shared.module\";\r\nimport { MovieListFacade } from \"./facades/movie-list.facade\";\r\nimport { MovieListComponent } from \"./movie-list.component\";\r\n\r\nimport { MovieListApiService } from \"./services/apis/movie-list.api.service\";\r\nimport { MovieListState } from \"./store/states/movie-list.state\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { MovieListRoutingModule } from \"./movie-list-routing.module\";\r\n\r\n@NgModule({\r\n    declarations: [\r\n        MovieListComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,        \r\n        SharedModule,\r\n        MovieListRoutingModule,\r\n        NgxsModule.forFeature([MovieListState])\r\n    ],\r\n    providers: [MovieListApiService, MovieListFacade]\r\n})\r\nexport class MovieListModule { }","import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Action, Selector, State, StateContext } from \"@ngxs/store\";\r\nimport { throwError } from \"rxjs\";\r\nimport { catchError, tap } from \"rxjs/operators\";\r\n\r\n\r\nimport { MovieListResponseModel } from \"src/app/shared/models/movie-list-response.model\";\r\nimport { MovieModel } from \"src/app/shared/models/movie.model\";\r\nimport { MovieListFacade } from \"../../facades/movie-list.facade\";\r\nimport { MovieListModel } from \"../../models/movie-list.model\";\r\nimport { MovieListApiService } from \"../../services/apis/movie-list.api.service\";\r\nimport { GetMovieList, SearchMovieList } from \"../actions/movie-list.actions\";\r\n\r\n\r\nexport interface MovieListStateModel {\r\n    movieList: Array<MovieModel>;\r\n    groupedMovieList: Array<MovieListModel>\r\n    error: any;\r\n    isLoading: boolean\r\n}\r\n\r\n@State<MovieListStateModel>({\r\n    name: 'movies',\r\n    defaults: {\r\n        movieList: [],\r\n        groupedMovieList: [],\r\n        error: null,\r\n        isLoading: true\r\n    }\r\n})\r\n\r\n// Movie List state\r\n@Injectable()\r\nexport class MovieListState {\r\n\r\n    constructor(private movieListService: MovieListApiService, private movieListFacade: MovieListFacade) {\r\n    }\r\n\r\n    @Selector()\r\n    static getMovieList(state: MovieListStateModel) {\r\n        return state.movieList;\r\n    }\r\n\r\n    @Selector()\r\n    static getGroupedMovieList(state: MovieListStateModel) {\r\n        return state.groupedMovieList;\r\n    }\r\n\r\n    @Selector()\r\n    static getError(state: MovieListStateModel) {\r\n        return state.error;\r\n    }\r\n\r\n    @Selector()\r\n    static isLoading(state: MovieListStateModel) {\r\n        return state.isLoading;\r\n    }\r\n\r\n    @Action(GetMovieList)\r\n    getMovieList({ getState, setState }: StateContext<MovieListStateModel>) {\r\n        const state = getState();\r\n        return this.movieListService.get().pipe(\r\n            tap((response: MovieListResponseModel) => {\r\n                setState({\r\n                    ...state,\r\n                    movieList: response.movies,\r\n                    groupedMovieList: this.movieListFacade.transform(response.movies),\r\n                    isLoading: false\r\n                });\r\n            }),\r\n            catchError((err: HttpErrorResponse) => {\r\n                setState({\r\n                    ...state,\r\n                    error: err.message,\r\n                    isLoading: false\r\n                });\r\n                return throwError(new Error(err.message));\r\n            })\r\n        );\r\n    }\r\n\r\n    @Action(SearchMovieList)\r\n    searchMovieList({ getState, setState }: StateContext<MovieListStateModel>, { payload }: any) {\r\n        const state = getState();\r\n        return this.movieListService.search(payload).pipe(\r\n            tap((response: MovieListResponseModel) => {\r\n                setState({\r\n                    ...state,\r\n                    movieList: response.movies,\r\n                    groupedMovieList: this.movieListFacade.transform(response.movies),\r\n                    isLoading: false\r\n                });\r\n            }),\r\n            catchError((err: HttpErrorResponse) => {\r\n                setState({\r\n                    ...state,\r\n                    error: err.message,\r\n                    isLoading: false\r\n                });\r\n                return throwError(new Error(err.message));\r\n            })\r\n        );\r\n    }\r\n\r\n\r\n}","export class GetMovieList {\r\n    static readonly type = \"[MovieList] Get\";\r\n}\r\n\r\nexport class SearchMovieList {\r\n    static readonly type = \"[MovieList] Search\";\r\n    constructor(public payload: string) { }\r\n}\r\n\r\n","import { Component } from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { Store } from \"@ngxs/store\";\r\nimport { SearchMovieList } from \"src/app/components/movie-list/store/actions/movie-list.actions\";\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\n\r\n\r\n@Component({\r\n    selector: 'app-page-header',\r\n    templateUrl: './page-header.component.html',\r\n    styleUrls: ['./page-header.component.scss']\r\n})\r\nexport class PageHeaderComponent {\r\n\r\n    faSearch = faSearch;\r\n    searchMovieForm: FormGroup;\r\n\r\n    constructor(private fb: FormBuilder, public store: Store) {\r\n        this.searchMovieForm = this.fb.group({\r\n            txtSearchInput: ['', Validators.required]\r\n        });\r\n    }\r\n\r\n    searchMovie() {\r\n        const searchValue = this.searchMovieForm.controls['txtSearchInput'].value\r\n        this.store.dispatch(new SearchMovieList(searchValue));\r\n        this.store.dispatch(new Navigate([\"/home\", searchValue]));\r\n    }\r\n\r\n}","<div>\r\n    <div class=\"row page-header\">\r\n        <div class=\"col-6\">\r\n            <h4>Wookie</h4>\r\n            <h4>Movies</h4>\r\n        </div>\r\n        <div class=\"input-group col-6\">\r\n            <form [formGroup]=\"searchMovieForm\" style=\"width:100%\">\r\n                <span class=\"input-group\">\r\n                    <button (click)=\"searchMovie()\" class=\"btn btn-outline-secondary border-right-0 border\"\r\n                        type=\"button\">\r\n                        <fa-icon [icon]=\"faSearch\"></fa-icon>\r\n                    </button>\r\n                    <input class=\"form-control border\" type=\"search\" formControlName=\"txtSearchInput\"\r\n                        (keyup.enter)=\"searchMovie()\" placeholder=\"search\">\r\n                </span>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    <hr>\r\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MovieListComponent } from './components/movie-list/movie-list.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'home', pathMatch: 'full' },\n  {\n    component: MovieListComponent,\n    path: 'home'\n  },\n  {\n    component: MovieListComponent,\n    path: 'home/:slug'\n  },\n  {\n    path: 'movie-detail/:slug',\n    loadChildren: () => import('./components/movie-detail/movie-detail.module').then(mod => mod.MovieDetailModule)\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable } from \"rxjs/internal/Observable\";\r\nimport { MovieListResponseModel } from \"src/app/shared/models/movie-list-response.model\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\n\r\n@Injectable()\r\nexport class MovieListApiService {\r\n    constructor(private httpClient: HttpClient) { }\r\n\r\n    get(): Observable<MovieListResponseModel> {\r\n        const endPoint = environment.baseUrl + \"movies\";\r\n        return this.httpClient.get<MovieListResponseModel>(endPoint);\r\n    }\r\n\r\n    search(queryString: string): Observable<MovieListResponseModel> {\r\n        const endPoint = environment.baseUrl + `movies?q=${queryString}`;\r\n        return this.httpClient.get<MovieListResponseModel>(endPoint);\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { throwError } from 'rxjs/internal/observable/throwError';\r\n\r\n// this intercepts every http request and also an error received from the end point.\r\n// It also the ideal layer to inject tokens, etc in the header.\r\n@Injectable()\r\nexport class HttpClientInterceptor implements HttpInterceptor {\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        if (!request.headers.has('Content-Type')) {\r\n            request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\r\n        }\r\n\r\n        const customReq = request.clone({\r\n            headers: request.headers.set('Authorization', 'Bearer Wookie2019')\r\n        });\r\n\r\n        return next.handle(customReq);\r\n\r\n    }\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}